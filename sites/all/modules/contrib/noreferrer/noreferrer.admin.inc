<?php

/**
 * @file
 * Admin settings callbacks for no referrer module.
 */

/**
 * Admin settings form.
 */
function noreferrer_admin() {
  $form['noreferrer_link'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Add the below link types to code-generated links'),
    '#default_value' => variable_get('noreferrer_link', TRUE),
    '#description'   => t('If checked, <code>rel="noopener"</code> and/or <code>rel="noreferrer"</code> will be added to links generated by code (e.g. menu items). Enabling this setting may have a negative impact on site performance because each link will be processed by the theme layer.'),
  );
  $form['noreferrer_noopener'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Add <code>rel="noopener"</code> to links with a target'),
    '#default_value' => variable_get('noreferrer_noopener', TRUE),
    '#description'   => t('If checked, <code>rel="noopener"</code> will be added to links with a target attribute.'),
  );
  $form['noreferrer_noreferrer'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Add <code>rel="noreferrer"</code> to non-allowed links'),
    '#default_value' => variable_get('noreferrer_noreferrer', TRUE),
    '#description'   => t('If checked, <code>rel="noreferrer"</code> will be added to non-allowed external links.'),
  );
  $form['noreferrer_allowed_domains'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Allowed domains'),
    '#default_value' => variable_get('noreferrer_allowed_domains', ''),
    '#description'   => t('Enter a space-separated list of domains to which referrer URLs will be sent (e.g. <em>example.com example.org</em>). Links to all other domains will have a <code>rel="noreferrer"</code> attribute added.'),
    '#maxlength'     => NULL,
  );
  $form['noreferrer_publish'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Publish list of allowed domains'),
    '#default_value' => variable_get('noreferrer_publish', FALSE),
    '#description'   => t('If checked, the list of allowed domains will be published at <a href="@url">@url</a> when saving this form.', array(
      '@url' => file_create_url(noreferrer_publish_uri()),
    )),
  );
  $form['noreferrer_subscribe_url'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Subscribe to external list of allowed domains'),
    '#default_value' => variable_get('noreferrer_subscribe_url', ''),
    '#description'   => t('If configured, the list of allowed domains will be retrieved from the given URL during each cron run.'),
  );
  $form = system_settings_form($form);
  $form['#submit'][] = 'noreferrer_admin_submit';
  return $form;
}

/**
 * Admin settings validate handler.
 */
function noreferrer_admin_validate($form, &$form_state) {
  if (strlen($form_state['values']['noreferrer_subscribe_url']) && !valid_url($form_state['values']['noreferrer_subscribe_url'], TRUE)) {
    form_set_error('noreferrer_subscribe_url', t('Please provide a valid URL.'));
  }
}

/**
 * Admin settings submit handler.
 */
function noreferrer_admin_submit($form, &$form_state) {
  drupal_register_shutdown_function('noreferrer_flush_caches');
  if (variable_get('noreferrer_publish', FALSE)) {
    noreferrer_publish();
  }
  if ($url = variable_get('noreferrer_subscribe_url', '')) {
    noreferrer_subscribe($url);
  }
}

/**
 * Purges caches using the No Referrer filter.
 */
function noreferrer_flush_caches() {
  $formats = db_select('filter')
    ->fields('filter', array('format'))
    ->condition('name', 'noreferrer')
    ->execute();
  foreach ($formats as $key => $format) {
    cache_clear_all($format->format . ':', 'cache_filter', TRUE);
    if (!$key) {
      cache_clear_all('*', 'cache_field', TRUE);
    }
  }
}

/**
 * Publishes domain allowlist.
 */
function noreferrer_publish() {
  if ($allowed_domains = variable_get('noreferrer_allowed_domains', '')) {
    $allowed_domains = drupal_json_encode(explode(' ', $allowed_domains));
    file_unmanaged_save_data($allowed_domains, noreferrer_publish_uri(), FILE_EXISTS_REPLACE);
  }
}

/**
 * Returns domain allowlist URI.
 */
function noreferrer_publish_uri() {
  // For security through obscurity purposes, the allowlist URL is secret.
  return 'public://noreferrer-allowlist-' . drupal_hmac_base64('noreferrer-allowlist', drupal_get_private_key()) . '.json';
}

/**
 * Retrieves allowlist from external URL.
 */
function noreferrer_subscribe($url) {
  $response = drupal_http_request($url);
  if (!empty($response->error)) {
    watchdog('noreferrer', 'Error %code received at %url while retrieving domain allowlist: %error.', array(
      '%code' => $response->code,
      '%url' => $url,
      '%error' => $response->error,
    ), WATCHDOG_ERROR, l(t('Configure No Referrer settings.'), 'admin/config/search/noreferrer'));
  }
  elseif ($response->code == 200 && ($allowed_domains = drupal_json_decode($response->data)) && is_array($allowed_domains)) {
    variable_set('noreferrer_allowed_domains', implode(' ', $allowed_domains));
  }
  else {
    watchdog('noreferrer', 'Unable to extract valid data from %url while retrieving domain allowlist.', array(
      '%url' => $url,
    ), WATCHDOG_ERROR, l(t('Configure No Referrer settings.'), 'admin/config/search/noreferrer'));
  }
}
